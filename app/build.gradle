apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'jacoco'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.sesi.chris.escuelitapp"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    jacoco {
        version "0.8.2"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug{
            testCoverageEnabled = true
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

// what to exclude from coverage report
// UI, "noise", generated classes, platform classes, etc.
def excludes = [
        '**/databinding/**/*.*',
        '**/android/databinding/*Binding.*',
        '**/BR.*',
        '**/R.*',
        '**/R$*.*',
        '**/BuildConfig.*',
        '**/Manifest*.*',
        '**/*_MembersInjector.*',
        '**/Dagger*Component.*',
        '**/Dagger*Component$Builder.*',
        '**/*Module_*Factory.*',
        '**/*Fragment*.*',
        '**/*Activity*.*',
        '**/*Adapter*.*',
        '**/*ViewPager*.*',
        '**/*ViewHolder*.*',
        '**/*Module*.*'
]

sonarqube {
    properties {
        property "sonar.projectKey", "EscuelitApp"
        property "sonar.projectName", "EscuelitApp"
        property "sonar.sources", "src/main/java/com/sesi/chris/escuelitapp"
        property "sonar.host.url", "http://localhost:9000/"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.tests", ["src/test/java"]
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.exclusions", "${excludes.join(',')}"
        property "sonar.jacoco.reportPaths", "${project.buildDir}/jacoco/testStagingDebugUnitTest.exec"
        property "sonar.junit.reportsPath", "${project.buildDir}/test-results/testStagingDebugUnitTest"
    }
}

jacoco {
    toolVersion = "0.8.2"
}

tasks.withType(Test) {
    // Important
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports for Debug build"

    reports {
        xml.enabled = true
        html.enabled = true
        html.destination = file("${buildDir}/jacocoHtml")
    }

    // generated classes
    getClassDirectories().setFrom(fileTree(
            dir: "$buildDir/intermediates/classes/staging/debug/com/sesi/chris/escuelitapp",
            excludes: excludes
    ) + fileTree(
            dir: "$buildDir/tmp/kotlin-classes/staging/debug/com/sesi/chris/escuelitapp",
            excludes: excludes
    ))
    // sources
    getSourceDirectories().setFrom(files([
            android.sourceSets.main.java.srcDirs,
            "$project.projectDir/src/main/java"
    ]))
    getExecutionData().setFrom(fileTree(dir: project.buildDir, includes: ['jacoco/testDebugUnitTest.exec']))

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.1.0'
    implementation 'androidx.navigation:navigation-ui:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.1.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}